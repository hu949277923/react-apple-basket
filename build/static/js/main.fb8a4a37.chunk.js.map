{"version":3,"sources":["stores/AppleStore.js","stores/RootStore.js","components/AppleItem.js","components/AppleBusket.js","App.js","index.js"],"names":["AppleStore","this","appleList","buttonText","isPicking","makeObservable","observable","pickApples","flow","bound","eatApples","action","overApples","computed","overApplesWeight","overApplesSum","eatApplesWeight","eatApplesSum","setTimeout","push","id","createAppleId","title","isEat","weight","createWeight","index","findIndex","item","length","parseInt","Math","random","filter","reduce","total","curr","RootStoreContext","createContext","RootStoreProvider","store","children","Provider","value","useRootStore","useContext","observer","appleStore","className","src","alt","onClick","showEmpty","console","log","map","rootStore","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb8a4a37.chunk.js","sourcesContent":["\nimport { action, computed, flow, makeObservable, observable } from 'mobx'\nclass AppleStore {\n  constructor () {\n    this.appleList = []\n    this.buttonText = '摘苹果'\n    this.isPicking = false\n    makeObservable(this, {\n      appleList: observable,\n      buttonText: observable,\n      isPicking: observable,\n      pickApples: flow.bound,\n      eatApples: action.bound,\n      overApples: computed,\n      overApplesWeight: computed,\n      overApplesSum: computed,\n      eatApplesWeight: computed,\n      eatApplesSum: computed\n    })\n  }\n  // 摘苹果\n  *pickApples () {\n    if (this.isPicking) return false\n    this.buttonText = '正在采摘...'\n    this.isPicking = true\n    yield setTimeout(() => {\n      this.appleList.push({\n        id: this.createAppleId(),\n        title: `红苹果 - ${this.createAppleId()}号`,\n        isEat: false,\n        weight: this.createWeight()\n      })\n      this.isPicking = false\n      this.buttonText = '摘苹果'\n    }, 2000)\n  }\n  // 吃苹果\n  eatApples (id) {\n    const index = this.appleList.findIndex(item => item.id === id)\n    if (index !== -1) this.appleList[index].isEat = true\n  }\n  createAppleId () {\n    return this.appleList.length + 1\n  }\n  createWeight () {\n    return parseInt(200 * Math.random())\n  }\n  // 剩余苹果\n  get overApples () {\n   return this.appleList.filter(item => !item.isEat)\n  }\n  // 剩余苹果重量\n  get overApplesWeight () {\n    const apples = this.appleList.filter(item => !item.isEat)\n    const weight = apples.reduce((total, curr) => total + curr.weight, 0)\n    return weight\n  }\n  // 剩余苹果数量\n  get overApplesSum () {\n    const apples = this.appleList.filter(item => !item.isEat)\n    return apples.length\n  }\n  // 吃掉苹果重量\n  get eatApplesWeight () {\n    const apples = this.appleList.filter(item => item.isEat)\n    const weight = apples.reduce((total, curr) => total + curr.weight, 0)\n    return weight\n  }\n  // 吃掉苹果数量\n  get eatApplesSum () {\n    const apples = this.appleList.filter(item => item.isEat)\n    return apples.length\n  }\n}\n\nexport default AppleStore","import AppleStore from \"./AppleStore\"\nimport { createContext, useContext } from \"react\"\n\nclass RootStore {\n  constructor() {\n    this.appleStore = new AppleStore()\n  }\n}\n\nconst RootStoreContext = createContext()\n\nconst RootStoreProvider = ({ store, children }) => {\n  return (\n    <RootStoreContext.Provider value={store}>\n      {children}\n    </RootStoreContext.Provider>\n  )\n}\n\nconst useRootStore = () => {\n  return useContext(RootStoreContext)\n}\n\nexport { RootStore, RootStoreProvider, useRootStore }\n","import { observer } from 'mobx-react'\nimport { useRootStore } from '../stores/RootStore'\nfunction AppleItem ({item}) {\n  const { appleStore } = useRootStore()\n  const { eatApples } = appleStore\n  return (\n    <div className=\"appleItem\">\n      <div className=\"apple\">\n        <img src='/images/apple.png' alt=\"\" />\n      </div>\n      <div className=\"info\">\n        <div className=\"name\">{item.title}</div>\n        <div className=\"weight\">{item.weight}克</div>\n      </div>\n      <div className=\"btn-div\">\n        <button onClick={() => eatApples(item.id)}> 吃掉 </button>\n      </div>\n    </div>\n  )\n}\nexport default observer(AppleItem)","import { useRootStore } from \"../stores/RootStore\"\nimport { observer } from 'mobx-react'\nimport AppleItem from \"./AppleItem\"\nfunction AppleBusket () {\n  const { appleStore } = useRootStore()\n  const {\n    pickApples, \n    overApples,\n    overApplesWeight,\n    overApplesSum,\n    eatApplesWeight,\n    eatApplesSum,\n    isPicking,\n    buttonText\n  } = appleStore\n  let showEmpty\n  if (!overApples.length) showEmpty = (<div className=\"empty-tip\" key=\"empty\">苹果篮子空空如也</div>)\n  console.log(appleStore.appleList)\n  return (\n    <div className=\"appleBusket\">\n      <div className=\"title\">苹果篮子</div>\n      <div className=\"stats\">\n        <div className=\"section\">\n          <div className=\"head\">当前</div>\n          <div className=\"content\">\n            {overApplesSum}个苹果，{overApplesWeight}克\n          </div>\n        </div>\n        <div className=\"section\">\n          <div className=\"head\">已吃掉</div>\n          <div className=\"content\">\n          {eatApplesSum}个苹果，{eatApplesWeight}克\n          </div>\n        </div>\n      </div>\n\n      <div className=\"appleList\">\n        {\n          overApples.map((item) => (<AppleItem key={item.id} item={item}/>))\n        }\n        {showEmpty}\n      </div>\n\n      <div className=\"btn-div\">\n          <button className={isPicking ? 'disabled': ''} onClick={pickApples} >{buttonText}</button>\n      </div>\n    </div>)\n}\nexport default observer(AppleBusket)\n","import AppleBusket from './components/AppleBusket'\nimport { RootStore, RootStoreProvider } from \"./stores/RootStore\"\nconst rootStore = new RootStore()\nfunction App() {\n  return (\n    <RootStoreProvider store={rootStore}>\n     <AppleBusket/>\n    </RootStoreProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/styles/appleBasket.scss'\nimport './assets/styles/appleItem.scss'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}